# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

# =========================
# üå± Environment Mode
# =========================
# Set to 'development' or 'production' --- note render will set its own variables... we use development for local use 
# and variables that might have two separate uses such as client vs testing email
NODE_ENV=development
VITE_NODE_ENV=development

# =========================
# üóÑÔ∏è Database (Prisma/PostgreSQL)
# =========================
# Local Postgres setup: username 'postgres', password '2322', database 'devprofiles', host 'localhost', port 5432
DATABASE_URL="postgresql://postgres:2322@localhost:5432/devprofiles?schema=public"

# =========================
# ‚ö° Vite Frontend
# =========================
# The port Vite will run on (default: 5173)
VITE_PORT=5173

# The public URL of your site (for Vite, if needed)
VITE_PUBLIC_URL=http://localhost:5173

# =========================
# üöÄ Express/Node Backend
# =========================
# The port your Express server runs on
PORT=3001

# =========================
# üîë GitHub REST API Integration
# =========================
# Personal Access Token or GitHub App token for API requests
GITHUB_TOKEN=ghp_yourgithubtokenhere

# GitHub API base URL (default, override if using GitHub Enterprise)
GITHUB_API_URL=https://api.github.com

# =========================
# üì® Email/SMTP (Optional, if needed)
# =========================
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_USER=youruser
# SMTP_PASS=yourpassword

# =========================
# üõ°Ô∏è Security/Secrets (Optional)
# =========================
# JWT_SECRET=your_jwt_secret_here
# SESSION_SECRET=your_session_secret_here

# =========================
# üìù Other Custom Variables (Optional)
# =========================
# Add any other custom env variables your app needs here










# =========================
# üìö NOTE: About This .env File and Environment Modes
# =========================
#
# Why does this file exist?
# - This .env file is for LOCAL DEVELOPMENT and ONBOARDING.
# - It documents all environment variables your app needs to run.
# - Each developer can use or customize their own .env for local setup.
#
# How does it work in production (e.g., Render)?
# - Production hosts like Render DO NOT use this file directly.
# - Instead, you must set all required variables in the Render dashboard (or your host's env settings).
# - At build and runtime, Render injects these variables into your app's environment.
#
# Why keep this file in the repo?
# - It acts as a living reference for all required variables.
# - It helps new team members get started quickly.
# - It ensures consistency between local and production environments.
#
# Should I commit this file?
# - Commit a template (with placeholders, no secrets) as `.env.example` for reference.
# - Add `.env` to `.gitignore` if it contains real secrets.
#
# Context for environment-specific variables:
# - Some variables may need different values in development vs. production.
#   - Example: In development, you might use a personal email or test API key.
#   - In production, use your organization's email or a production API key.
# - Use `NODE_ENV` or `VITE_NODE_ENV` to distinguish between modes in your code.
# - Always double-check that secrets and sensitive data are never committed to version control.
#
# Typical workflow:
# 1. Developers use `.env` locally.
# 2. Production uses variables set in the Render dashboard.
# 3. Document all required variables in `.env` and/or `env-reference.md`.
#
# For more info, see your project's `env-reference.md` and deployment docs.